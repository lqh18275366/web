{
  "uid" : "468b978088563dca",
  "name" : "test_login_success",
  "fullName" : "cases.test_login.TestLogin#test_login_success",
  "historyId" : "4de4eac7aa5437331edc4ae996ff58ee",
  "time" : {
    "start" : 1609424479602,
    "stop" : 1609424520991,
    "duration" : 41389
  },
  "status" : "failed",
  "statusMessage" : "AssertionError: assert False\n +  where False = <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>>()\n +    where <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>> = <pages.login_page.LoginPage object at 0x04C57F50>.is_logout_text_exist",
  "statusTrace" : "self = <cases.test_login.TestLogin object at 0x04D5DAF0>\nhandler = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"07a11ea70ce5dcc70fdedf470bc80562\")>, <pages.login_page.LoginPage object at 0x04C57F50>)\n\n    def test_login_success(self,handler):\n        logger.info('进入 test_login_success methon')\n        logger.info(\"登录测试—正常数据\")\n        # 输入正确的用户名，密码进行登录，其中handler【1】表示lg（即，driver.get(login_url) ）\n        handler[1].login(success_data['username'],success_data['password'])\n        logger.info('期望值：{}'.format(True))\n        logger.info('实际值：{}'.format(handler[1].is_logout_text_exist()))\n>       assert handler[1].is_logout_text_exist()  #登录成功后进行判断是否登录成功\nE       assert False\nE        +  where False = <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>>()\nE        +    where <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>> = <pages.login_page.LoginPage object at 0x04C57F50>.is_logout_text_exist\n\ncases\\test_login.py:25: AssertionError",
  "flaky" : false,
  "newFailed" : false,
  "beforeStages" : [ {
    "name" : "handler",
    "time" : {
      "start" : 1609424465682,
      "stop" : 1609424479595,
      "duration" : 13913
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "testStage" : {
    "status" : "failed",
    "statusMessage" : "AssertionError: assert False\n +  where False = <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>>()\n +    where <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>> = <pages.login_page.LoginPage object at 0x04C57F50>.is_logout_text_exist",
    "statusTrace" : "self = <cases.test_login.TestLogin object at 0x04D5DAF0>\nhandler = (<selenium.webdriver.chrome.webdriver.WebDriver (session=\"07a11ea70ce5dcc70fdedf470bc80562\")>, <pages.login_page.LoginPage object at 0x04C57F50>)\n\n    def test_login_success(self,handler):\n        logger.info('进入 test_login_success methon')\n        logger.info(\"登录测试—正常数据\")\n        # 输入正确的用户名，密码进行登录，其中handler【1】表示lg（即，driver.get(login_url) ）\n        handler[1].login(success_data['username'],success_data['password'])\n        logger.info('期望值：{}'.format(True))\n        logger.info('实际值：{}'.format(handler[1].is_logout_text_exist()))\n>       assert handler[1].is_logout_text_exist()  #登录成功后进行判断是否登录成功\nE       assert False\nE        +  where False = <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>>()\nE        +    where <bound method LoginPage.is_logout_text_exist of <pages.login_page.LoginPage object at 0x04C57F50>> = <pages.login_page.LoginPage object at 0x04C57F50>.is_logout_text_exist\n\ncases\\test_login.py:25: AssertionError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6ea4aa5b8f45ab5",
      "name" : "log",
      "source" : "e6ea4aa5b8f45ab5.txt",
      "type" : "text/plain",
      "size" : 39197
    } ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : true,
    "shouldDisplayMessage" : true,
    "attachmentsCount" : 1
  },
  "afterStages" : [ {
    "name" : "handler::0",
    "time" : {
      "start" : 1609424521181,
      "stop" : 1609424523498,
      "duration" : 2317
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "stepsCount" : 0,
    "hasContent" : false,
    "shouldDisplayMessage" : false,
    "attachmentsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "cases"
  }, {
    "name" : "suite",
    "value" : "test_login"
  }, {
    "name" : "subSuite",
    "value" : "TestLogin"
  }, {
    "name" : "host",
    "value" : "PC-20200718ELAI"
  }, {
    "name" : "thread",
    "value" : "11744-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "cases.test_login"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "468b978088563dca.json",
  "parameterValues" : [ ]
}